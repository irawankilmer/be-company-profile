basePath: /
definitions:
  request.CreatePostRequest:
    properties:
      content:
        type: string
      title:
        type: string
    required:
    - content
    - title
    type: object
  request.LoginRequest:
    properties:
      login:
        description: Bisa username atau email
        type: string
      password:
        type: string
    required:
    - login
    - password
    type: object
  request.UpdatePostRequest:
    properties:
      content:
        type: string
      title:
        type: string
    required:
    - content
    - title
    type: object
  response.MessageResponse:
    properties:
      data: {}
      message:
        type: string
    type: object
  response.PostResponse:
    properties:
      content:
        type: string
      created_at:
        type: string
      id:
        type: integer
      title:
        type: string
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
info:
  contact: {}
  description: Simply blog system
  title: Be Blog - REST API Docs
  version: "1.0"
paths:
  /api/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: Login data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.MessageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.MessageResponse'
      summary: Login user
      tags:
      - Auth
  /api/logout:
    post:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.MessageResponse'
      security:
      - BearerAuth: []
      summary: Logout user
      tags:
      - Auth
  /api/post:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/response.PostResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.MessageResponse'
      security:
      - BearerAuth: []
      summary: Get all posts
      tags:
      - Post
    post:
      consumes:
      - application/json
      parameters:
      - description: Post data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.CreatePostRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.PostResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.MessageResponse'
      security:
      - BearerAuth: []
      summary: Create new post
      tags:
      - Post
  /api/post/{id}:
    delete:
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.MessageResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.MessageResponse'
      security:
      - BearerAuth: []
      summary: Delete post
      tags:
      - Post
    get:
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.PostResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.MessageResponse'
      security:
      - BearerAuth: []
      summary: Get post by ID
      tags:
      - Post
    put:
      consumes:
      - application/json
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      - description: Post data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.UpdatePostRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.PostResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.MessageResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.MessageResponse'
      security:
      - BearerAuth: []
      summary: Update post
      tags:
      - Post
schemes:
- https
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
